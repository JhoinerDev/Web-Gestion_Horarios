# Generated by Django 5.2.3 on 2025-07-06 19:19

import core.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_versionhorario_alter_aula_options_and_more'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='horario',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='solicitudclase',
            name='aula',
            field=models.ForeignKey(blank=True, help_text='Aula sugerida para esta solicitud de clase (puede venir del Excel).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_aula', to='core.aula'),
        ),
        migrations.AddField(
            model_name='solicitudclase',
            name='dia',
            field=models.CharField(blank=True, choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miércoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes'), ('SAB', 'Sábado'), ('DOM', 'Domingo')], help_text='Día sugerido para la solicitud de clase.', max_length=3, null=True),
        ),
        migrations.AddField(
            model_name='solicitudclase',
            name='hora_fin',
            field=models.TimeField(blank=True, help_text='Hora de fin sugerida para la solicitud de clase.', null=True),
        ),
        migrations.AddField(
            model_name='solicitudclase',
            name='hora_inicio',
            field=models.TimeField(blank=True, help_text='Hora de inicio sugerida para la solicitud de clase.', null=True),
        ),
        migrations.AlterField(
            model_name='aula',
            name='capacidad',
            field=models.IntegerField(help_text='Número máximo de estudiantes que el aula puede albergar.'),
        ),
        migrations.AlterField(
            model_name='aula',
            name='codigo',
            field=models.CharField(help_text='Código identificador único para el aula.', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='aula',
            name='recursos_especiales',
            field=models.JSONField(blank=True, default=list, help_text="Lista de recursos adicionales del aula en formato JSON. Ej: ['Proyector', 'Pizarra Interactiva']", null=True),
        ),
        migrations.AlterField(
            model_name='aula',
            name='ubicacion',
            field=models.CharField(blank=True, help_text='Ubicación física del aula (ej. Edificio A, Piso 3).', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='horario',
            name='aula',
            field=models.ForeignKey(help_text='Aula asignada a este horario.', on_delete=django.db.models.deletion.CASCADE, related_name='horarios_asignados', to='core.aula'),
        ),
        migrations.AlterField(
            model_name='horario',
            name='carrera_programa',
            field=models.CharField(default='ingeniero en sistemas', help_text='Carrera o programa académico al que pertenece este horario.', max_length=100),
        ),
        migrations.AlterField(
            model_name='horario',
            name='dia',
            field=models.CharField(choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miércoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes'), ('SAB', 'Sábado'), ('DOM', 'Domingo')], help_text='Día de la semana del horario.', max_length=3),
        ),
        migrations.AlterField(
            model_name='horario',
            name='hora_fin',
            field=models.TimeField(help_text='Hora de fin del bloque horario.'),
        ),
        migrations.AlterField(
            model_name='horario',
            name='hora_inicio',
            field=models.TimeField(help_text='Hora de inicio del bloque horario.'),
        ),
        migrations.AlterField(
            model_name='horario',
            name='materia',
            field=models.ForeignKey(help_text='Materia asignada a este horario.', on_delete=django.db.models.deletion.CASCADE, related_name='horarios_asignados', to='core.materia'),
        ),
        migrations.AlterField(
            model_name='horario',
            name='periodo_academico',
            field=models.CharField(default='2025-2', help_text='Período académico (ej. 2025-1, 2025-2).', max_length=20),
        ),
        migrations.AlterField(
            model_name='horario',
            name='profesor',
            field=models.ForeignKey(help_text='Profesor asignado a este horario.', on_delete=django.db.models.deletion.CASCADE, related_name='horarios_asignados', to='core.profesor'),
        ),
        migrations.AlterField(
            model_name='horario',
            name='seccion',
            field=models.CharField(default='1', help_text='Sección de la materia.', max_length=10),
        ),
        migrations.AlterField(
            model_name='horario',
            name='tipo_clase',
            field=models.CharField(blank=True, help_text='Tipo de clase (ej. Teoría, Práctica, Laboratorio).', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='materia',
            name='carrera_principal',
            field=models.CharField(default='Sin Carrera Definida', help_text='Carrera principal a la que pertenece esta materia.', max_length=255),
        ),
        migrations.AlterField(
            model_name='materia',
            name='horario_de_laboratorio',
            field=models.IntegerField(default=0, help_text='Horas de laboratorio por semana para esta materia.'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='horarios_de_practicas',
            field=models.IntegerField(default=0, help_text='Horas de práctica por semana para esta materia.'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='horas_semanales',
            field=models.IntegerField(default=0, help_text='Total de horas que la materia debe impartirse a la semana (incluye teoría, práctica, laboratorio).'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='horas_teoricas',
            field=models.IntegerField(default=0, help_text='Horas de teoría por semana para esta materia.'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='nombre',
            field=models.CharField(help_text='Nombre de la materia.', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='materia',
            name='profesores_aptos',
            field=models.ManyToManyField(blank=True, help_text='Profesores calificados para impartir esta materia.', related_name='materias_aptas', to='core.profesor'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='secciones_disponibles',
            field=models.IntegerField(default=1, help_text='Número de secciones en las que se dividirá la materia.'),
        ),
        migrations.AlterField(
            model_name='materia',
            name='tipo_de_materia',
            field=models.CharField(default='Obligatoria', help_text='Tipo de materia (ej. Obligatoria, Electiva).', max_length=50),
        ),
        migrations.AlterField(
            model_name='profesor',
            name='carga_horaria_maxima',
            field=models.IntegerField(default=0, help_text='Máximo de horas semanales que el profesor puede impartir.'),
        ),
        migrations.AlterField(
            model_name='profesor',
            name='carrera_principal',
            field=models.CharField(blank=True, help_text='Carrera principal a la que está adscrito el profesor.', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='profesor',
            name='disponibilidad',
            field=models.JSONField(blank=True, default=dict, help_text="Disponibilidad horaria del profesor por día de la semana en formato JSON. Ej: {'LUN': ['08:00-12:00']}", null=True),
        ),
        migrations.AlterField(
            model_name='profesor',
            name='especialidad',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='aula',
            field=models.ForeignKey(blank=True, help_text='Aula afectada por esta restricción (si aplica).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restricciones_definidas', to='core.aula'),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='descripcion',
            field=models.TextField(blank=True, help_text='Descripción detallada de la restricción.', null=True),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='dia',
            field=models.CharField(blank=True, choices=[('LUN', 'Lunes'), ('MAR', 'Martes'), ('MIE', 'Miércoles'), ('JUE', 'Jueves'), ('VIE', 'Viernes'), ('SAB', 'Sábado'), ('DOM', 'Domingo')], help_text='Día de la semana al que aplica la restricción.', max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='hora_fin',
            field=models.TimeField(blank=True, help_text='Hora de fin del período de restricción.', null=True),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='hora_inicio',
            field=models.TimeField(blank=True, help_text='Hora de inicio del período de restricción.', null=True),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='materia',
            field=models.ForeignKey(blank=True, help_text='Materia afectada por esta restricción (si aplica).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restricciones_definidas', to='core.materia'),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='nombre',
            field=models.CharField(help_text='Nombre descriptivo de la restricción.', max_length=200),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='profesor',
            field=models.ForeignKey(blank=True, help_text='Profesor afectado por esta restricción (si aplica).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='restricciones_definidas', to='core.profesor'),
        ),
        migrations.AlterField(
            model_name='restriccion',
            name='reglas',
            field=models.JSONField(blank=True, default=dict, help_text='Reglas adicionales en formato JSON (opcional).', null=True, validators=[core.models.validate_json_schema]),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='carrera_programa',
            field=models.CharField(help_text='Carrera o programa al que pertenece la solicitud.', max_length=255),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='estado',
            field=models.CharField(choices=[('Pendiente', 'Pendiente'), ('Asignada', 'Asignada'), ('Cancelada', 'Cancelada'), ('Rechazada', 'Rechazada')], default='Pendiente', help_text='Estado actual de la solicitud (Pendiente, Asignada, Cancelada, Rechazada).', max_length=20),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='materia',
            field=models.ForeignKey(help_text='Materia solicitada para la clase.', on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_clase', to='core.materia'),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='periodo_academico',
            field=models.CharField(help_text='Período académico para el cual se solicita la clase (ej. 2025-1).', max_length=20),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='profesor',
            field=models.ForeignKey(help_text='Profesor que solicita o impartirá la clase.', on_delete=django.db.models.deletion.CASCADE, related_name='solicitudes_clase', to='core.profesor'),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='requisitos_aula_sugeridos',
            field=models.JSONField(blank=True, default=dict, help_text='JSON con detalles de los requisitos o sugerencias del aula original del Excel.', null=True, validators=[core.models.validate_json_schema]),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='seccion',
            field=models.CharField(help_text='Sección de la materia solicitada.', max_length=10),
        ),
        migrations.AlterField(
            model_name='solicitudclase',
            name='tipo_clase',
            field=models.CharField(choices=[('Teoría', 'Teoría'), ('Práctica', 'Práctica'), ('Laboratorio', 'Laboratorio'), ('Seminario', 'Seminario')], help_text='Tipo de clase solicitada (ej. Teoría, Práctica).', max_length=50),
        ),
        migrations.AlterField(
            model_name='versionhorario',
            name='datos_horario_json',
            field=models.JSONField(default=list, help_text='Copia serializada del conjunto de horarios.', validators=[core.models.validate_json_schema]),
        ),
        migrations.AlterField(
            model_name='versionhorario',
            name='fecha_guardado',
            field=models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se guardó esta versión.'),
        ),
        migrations.AlterUniqueTogether(
            name='horario',
            unique_together={('aula', 'dia', 'hora_inicio', 'hora_fin', 'periodo_academico')},
        ),
    ]
