"""
Django settings for sistema_horarios project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta # Necesario para la configuración de JWT

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$pebf5@tinvi)@q+a5#3!zu&!hp^^mw0moe@&huo^4x^$$k4(&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [] # En producción, aquí irían los dominios de tu aplicación (ej. ['www.tudominio.com', 'api.tudominio.com'])

# Configuración de Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        # Considera usar permisos más granulares en tus ViewSets/APIViews si no todo
        # debe requerir autenticación por defecto (ej. vistas de login, registro).
        # 'rest_framework.permissions.IsAuthenticated', 
        # Para desarrollo, puedes empezar con AllowAny si no quieres autenticación inmediatamente
        'rest_framework.permissions.AllowAny', # Permite acceso a todos los usuarios (autenticados o no)
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser', # Importante para subida de archivos (Excel)
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer', # Muy útil para desarrollo para probar APIs en el navegador
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10 # Número de elementos por página para paginación por defecto
}

# Configuración de JWT (JSON Web Tokens) para rest_framework_simplejwt
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60), # Duración del token de acceso (ej. 60 minutos)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),   # Duración del token de refresco (ej. 1 día)
    'ROTATE_REFRESH_TOKENS': True, # Rotar el token de refresco en cada uso
    'BLACKLIST_AFTER_ROTATION': True, # Invalidar el token de refresco antiguo después de rotación
    'UPDATE_LAST_LOGIN': False, # No actualizar el campo last_login del usuario en cada token
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',), # Tipo de encabezado para el token (ej. Authorization: Bearer <token>)
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Mis apps
    'core', # <-- ¡Asegúrate de que 'core' está aquí!
    # Apps de terceros
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware', # Debe ir antes de CommonMiddleware
    # CORS Middleware DEBE ir antes de CommonMiddleware y CsrfViewMiddleware
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sistema_horarios_config.urls' # Confirmado, nombre de tu proyecto

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sistema_horarios_config.wsgi.application' # Confirmado, nombre de tu proyecto

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-ve' # Cambiado a español de Venezuela
TIME_ZONE = 'America/Caracas' # Cambiado a la zona horaria de Los Teques, Venezuela

USE_I18N = True # Habilitar internacionalización

USE_TZ = True # Habilitar zonas horarias

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles' # Donde Django recolectará los archivos estáticos en producción


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de CORS
# =====================
# Es crucial para el desarrollo con un frontend en un dominio diferente.

# Opción para permitir TODOS los orígenes (para desarrollo fácil, pero ¡PELIGROSO en producción!)
# CORS_ALLOW_ALL_ORIGINS = True 

# Opción recomendada para especificar orígenes permitidos (más seguro)
# Si usas esta opción, comenta o elimina `CORS_ALLOW_ALL_ORIGINS = True`
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Si tu frontend React/Vue/Angular corre en este puerto
    "http://127.0.0.1:3000",  # Alternativa para localhost
    "http://localhost:8000",  # Si haces pruebas desde el mismo origen de Django a veces (ej. Browsable API)
    "http://127.0.0.1:8000",  # Alternativa para localhost:8000
    # Agrega aquí las URLs de tu frontend cuando lo despliegues a producción (ej. "https://mi-frontend.com")
]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'POST',
    'PUT',
    'PATCH', # ¡Añadido PATCH! Comúnmente usado para actualizaciones parciales
]

# CORS_ALLOW_HEADERS también puede ser útil si envías cabeceras personalizadas
# CORS_ALLOW_HEADERS = [
#     'accept',
#     'accept-encoding',
#     'authorization',
#     'content-type',
#     'dnt',
#     'origin',
#     'user-agent',
#     'x-csrftoken',
#     'x-requested-with',
# ]

# CORS_ALLOW_CREDENTIALS = True # Si tu frontend necesita enviar cookies de origen cruzado (ej. para sesiones)